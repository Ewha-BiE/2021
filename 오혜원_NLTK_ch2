{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "import nltk"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "from nltk.corpus import PlaintextCorpusReader"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'C:\\\\programming\\\\lib\\\\site-packages\\\\nltk\\\\corpus\\\\__init__.py'"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nltk.corpus.__file__ ##file위치를 알고 싶을 때 ^^"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "from nltk.corpus import PlaintextCorpusReader ##위의 파일 그대로 주소 따라가면 가느응ㅇ,,,"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "corpus_root='C:/programming/Lib/site-packages/nltk/corpus/raw1/ariana_songs.txt'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'C:/programming/Lib/site-packages/nltk/corpus/raw1/ariana_songs.txt'"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "corpus_root"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "wordlists=PlaintextCorpusReader(corpus_root,'.*')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[]"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "wordlists.fileids()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "'PlaintextCorpusReader' object has no attribute 'word'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-95-620c0750d2ae>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mwordlists\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mword\u001b[0m\u001b[1;33m(\u001b[0m\u001b[1;34m'connectives'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m: 'PlaintextCorpusReader' object has no attribute 'word'"
     ]
    }
   ],
   "source": [
    "wordlists.word('connectives')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "corpus_root=\"C:/programming/Lib/site-packages/nltk/corpus/raw1\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [],
   "source": [
    "myFirstCorpus=nltk.corpus.PlaintextCorpusReader(corpus_root,\".*.txt\",encoding=\"utf-8\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'C:\\\\programming\\\\lib\\\\site-packages\\\\nltk\\\\corpus\\\\__init__.py'"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nltk.corpus.__file__ "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['ariana_songs.txt',\n",
       " 'gni-1-1-1.txt',\n",
       " 'gni-1-1-2.txt',\n",
       " 'gni-1-1-20.txt',\n",
       " 'gni-1-1-25.txt',\n",
       " 'gni-1-1-32.txt',\n",
       " 'gni-1-1-40.txt',\n",
       " 'gni-1-1-50.txt',\n",
       " 'gni-1-1-55.txt',\n",
       " 'gni-1-1-7.txt',\n",
       " 'gni-1-2-101.txt',\n",
       " 'gni-1-2-108.txt',\n",
       " 'gni-1-2-113.txt',\n",
       " 'gni-1-2-65.txt',\n",
       " 'gni-1-2-75.txt',\n",
       " 'gni-1-2-80.txt',\n",
       " 'gni-1-2-87.txt',\n",
       " 'gni-1-2-94.txt',\n",
       " 'gni-10-1-1.txt',\n",
       " 'gni-10-1-16.txt',\n",
       " 'gni-10-1-23.txt',\n",
       " 'gni-10-1-33.txt',\n",
       " 'gni-10-1-40.txt',\n",
       " 'gni-10-1-44.txt',\n",
       " 'gni-10-1-51.txt',\n",
       " 'gni-10-1-58.txt',\n",
       " 'gni-10-1-65.txt',\n",
       " 'gni-10-1-9.txt',\n",
       " 'gni-10-2-69.txt',\n",
       " 'gni-10-2-81.txt',\n",
       " 'gni-10-2-99.txt',\n",
       " 'gni-10-3-184.txt',\n",
       " 'gni-10-3-206.txt',\n",
       " 'gni-10-4-213.txt',\n",
       " 'gni-10-4-220.txt',\n",
       " 'gni-10-4-271.txt',\n",
       " 'gni-11-2-59.txt',\n",
       " 'gni-11-4-254.txt',\n",
       " 'gni-12-4-145.txt',\n",
       " 'gni-15-4-162.txt',\n",
       " 'gni-17-3-29.txt',\n",
       " 'gni-2-1-1.txt',\n",
       " 'gni-2-1-19.txt',\n",
       " 'gni-2-1-30.txt',\n",
       " 'gni-2-1-36.txt',\n",
       " 'gni-2-1-45.txt',\n",
       " 'gni-2-1-53.txt',\n",
       " 'gni-2-1-7.txt',\n",
       " 'gni-2-2-107.txt',\n",
       " 'gni-2-2-61.txt',\n",
       " 'gni-2-2-67.txt',\n",
       " 'gni-2-2-75.txt',\n",
       " 'gni-2-2-81.txt',\n",
       " 'gni-2-2-86.txt',\n",
       " 'gni-2-2-92.txt',\n",
       " 'gni-2-2-99.txt',\n",
       " 'gni-2-3-113.txt',\n",
       " 'gni-2-3-121.txt',\n",
       " 'gni-2-3-126.txt',\n",
       " 'gni-2-3-131.txt',\n",
       " 'gni-2-3-134.txt',\n",
       " 'gni-2-3-142.txt',\n",
       " 'gni-2-3-147.txt',\n",
       " 'gni-2-4-153.txt',\n",
       " 'gni-2-4-163.txt',\n",
       " 'gni-2-4-167.txt',\n",
       " 'gni-2-4-174.txt',\n",
       " 'gni-2-4-180.txt',\n",
       " 'gni-2-4-183.txt',\n",
       " 'gni-2-4-191.txt',\n",
       " 'gni-3-1-1.txt',\n",
       " 'gni-3-1-15.txt',\n",
       " 'gni-3-1-24.txt',\n",
       " 'gni-3-1-30.txt',\n",
       " 'gni-3-1-35.txt',\n",
       " 'gni-3-1-39.txt',\n",
       " 'gni-3-1-8.txt',\n",
       " 'gni-3-2-47.txt',\n",
       " 'gni-3-2-52.txt',\n",
       " 'gni-3-2-55.txt',\n",
       " 'gni-3-2-61.txt',\n",
       " 'gni-3-2-66.txt',\n",
       " 'gni-3-2-73.txt',\n",
       " 'gni-3-2-77.txt',\n",
       " 'gni-3-3-53.txt',\n",
       " 'gni-3-3-63.txt',\n",
       " 'gni-3-3-68.txt',\n",
       " 'gni-3-3-74.txt',\n",
       " 'gni-3-3-80.txt',\n",
       " 'gni-3-3-86.txt',\n",
       " 'gni-3-3-94.txt',\n",
       " 'gni-3-4-133.txt',\n",
       " 'gni-3-4-142.txt',\n",
       " 'gni-3-4-149.txt',\n",
       " 'gni-3-4-154.txt',\n",
       " 'gni-3-4-159.txt',\n",
       " 'gni-3-4-166.txt',\n",
       " 'gni-3-4-172.txt',\n",
       " 'gni-4-1-1.txt',\n",
       " 'gni-4-1-11.txt',\n",
       " 'gni-4-1-16.txt',\n",
       " 'gni-4-1-23.txt',\n",
       " 'gni-4-1-33.txt',\n",
       " 'gni-4-1-40.txt',\n",
       " 'gni-4-1-45.txt',\n",
       " 'gni-4-2-51.txt',\n",
       " 'gni-4-2-57.txt',\n",
       " 'gni-4-2-65.txt',\n",
       " 'gni-4-2-71.txt',\n",
       " 'gni-4-2-77.txt',\n",
       " 'gni-4-2-80.txt',\n",
       " 'gni-4-2-87.txt',\n",
       " 'gni-4-3-103.txt',\n",
       " 'gni-4-3-110.txt',\n",
       " 'gni-4-3-118.txt',\n",
       " 'gni-4-3-125.txt',\n",
       " 'gni-4-3-129.txt',\n",
       " 'gni-4-3-133.txt',\n",
       " 'gni-4-3-97.txt',\n",
       " 'gni-4-4-141.txt',\n",
       " 'gni-4-4-147.txt',\n",
       " 'gni-4-4-161.txt',\n",
       " 'gni-4-4-167.txt',\n",
       " 'gni-4-4-170.txt',\n",
       " 'gni-4-4-173.txt',\n",
       " 'gni-5-1-1.txt',\n",
       " 'gni-5-2-52.txt',\n",
       " 'gni-5-2-77.txt',\n",
       " 'gni-5-2-83.txt',\n",
       " 'gni-6-1-7.txt',\n",
       " 'gni-6-1-8.txt',\n",
       " 'gni-6-4-173.txt',\n",
       " 'gni-6-4-202.txt',\n",
       " 'gni-7-1-1.txt',\n",
       " 'gni-7-1-13.txt',\n",
       " 'gni-7-1-20.txt',\n",
       " 'gni-7-1-26.txt',\n",
       " 'gni-7-1-46.txt',\n",
       " 'gni-7-1-49.txt',\n",
       " 'gni-7-2-107.txt',\n",
       " 'gni-7-2-131.txt',\n",
       " 'gni-7-2-53.txt',\n",
       " 'gni-7-2-57.txt',\n",
       " 'gni-7-2-65.txt',\n",
       " 'gni-7-2-85.txt',\n",
       " 'gni-7-2-97.txt',\n",
       " 'gni-7-3-163.txt',\n",
       " 'gni-7-3-171.txt',\n",
       " 'gni-7-4-203.txt',\n",
       " 'gni-7-4-217.txt',\n",
       " 'gni-8-1-1.txt',\n",
       " 'gni-8-1-19.txt',\n",
       " 'gni-8-1-28.txt',\n",
       " 'gni-8-1-34.txt',\n",
       " 'gni-8-1-41.txt',\n",
       " 'gni-8-1-50.txt',\n",
       " 'gni-8-1-58.txt',\n",
       " 'gni-8-1-9.txt',\n",
       " 'gni-8-2-63.txt',\n",
       " 'gni-8-2-76.txt',\n",
       " 'gni-8-2-81.txt',\n",
       " 'gni-8-2-97.txt',\n",
       " 'gni-8-3-101.txt',\n",
       " 'gni-8-3-103.txt',\n",
       " 'gni-8-4-170.txt',\n",
       " 'gni-8-4-206.txt',\n",
       " 'gni-9-1-1.txt',\n",
       " 'gni-9-1-12.txt',\n",
       " 'gni-9-1-19.txt',\n",
       " 'gni-9-2-45.txt',\n",
       " 'gni-9-2-59.txt',\n",
       " 'gni-9-2-79.txt',\n",
       " 'gni-9-2-85.txt',\n",
       " 'gni-9-3-127.txt',\n",
       " 'gni-9-3-134.txt',\n",
       " 'gni-9-3-136.txt',\n",
       " 'gni-9-3-138.txt',\n",
       " 'gni-9-4-143.txt',\n",
       " 'gni-9-4-152.txt',\n",
       " 'gni-9-4-173.txt',\n",
       " 'gni-9-4-181.txt',\n",
       " 'gni-9-4-189.txt',\n",
       " 'gni-9-4-194.txt',\n",
       " 'gni-9-4-197.txt']"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "myFirstCorpus.fileids()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Prediction of Metal Ion Binding Sites in Proteins from Amino Acid Sequences by Using Simplified Amino Acid Alphabets and Random Forest Model.\\n\\nMetal binding proteins or metallo-proteins are important for the stability of the protein and also serve as co-factors in various functions like controlling metabolism, regulating signal transport, and metal homeostasis.\\n\\nIn structural genomics, prediction of metal binding proteins help in the selection of suitable growth medium for overexpression’s studies and also help in obtaining the functional protein.\\n\\nComputational prediction using machine learning approach has been widely used in various fields of bioinformatics based on the fact all the information contains in amino acid sequence.\\n\\nIn this study, random forest machine learning prediction systems were deployed with simplified amino acid for prediction of individual major metal ion binding sites like copper, calcium, cobalt, iron, magnesium, manganese, nickel, and zinc.\\n\\nAmino acids play a central role in the building block of protein.\\n\\nThe primary structure of the protein is determined by the arrangement of 20 naturally occurring amino acids.\\n\\nThe function of a protein is determined from their amino acids and also they depend upon interaction with cofactors, binding with metal ions and interaction with other proteins.\\n\\nThe proteome of all the organism share significant metal ions and metal binding cofactors to carry out its essential function.\\n\\nIt has been estimated that approximately 30% of all proteins contain at least one metal.\\n\\nThe proteins play a vital role in biological processes and in the stability of the protein by binding with metal ions or metal containing-cofactors [1].\\n\\nThe proteins bind with major metal ions like transition metals, alkali, and alkaline metals.\\n\\nThe frequent metal ions that bind with proteins are sodium, copper, iron, magnesium, manganese, potassium, and zinc ions respectively.\\n\\nIn in-vitro condition, the unfolded polypeptide may are observed to interact with metal ions that direct the polypeptide folding process [2].\\n\\nIdentification of metal binding through experimental procedures like the use of metal ion affinity column chromatography [3, 4], electrophoretic mobility shift assay [5, 6], absorbance spectroscopy [7], gel electrophoresis [8], nuclear magnetic resonance spectroscopy [9–11], and mass spectrometry [3, 12] require tedious steps and specific instruments, making them expensive and may be unsuitable for unknown targets.\\n\\nIn this aspect, there is a need for computational predictors of protein binding metal ion in order to reduce time and cost.\\n\\nFor example, predictions of protein metal binding ions are useful in structural genomics, to select proper growth medium for overexpression studies and for the easy interpretation of electron density maps.\\n\\nBut fortunately, metal-binding ability are encoded in the amino acidic sequences and these primary sequences help in protein structure formation.\\n\\nThrough genomic projects various organism genomic sequences have been annotated somehow along with metalloproteins contained in them [1].\\n\\nBioinformatics has been extensively used to predict metal-binding ability from amino acid sequences.\\n\\nVarious computational methods like artificial neural networks [13], support vector machines [14], decision tree algorithm [15], graph theory [16], FoldX force field [17], CHED [18, 19], and geometry algorithm methods [16].\\n\\nThese methods depend upon either only sequence information or the use of both sequence and structure information.\\n\\nHowever, most of the available prediction methods are either based on the knowledge of the apoprotein structure or restricted to few specific cases, like the metal binding of histidines/cysteines.\\n\\nMost of these methods have been implemented as standalone software or web servers to the research community [15, 20].\\n\\nDue to the availability of cheap and advancement of sequencing instruments, the sequence of proteins has increased rapidly over when compared to protein structure data.\\n\\nThis due to the fact that experimental determining the three-dimensional of protein is difficult and expensive.\\n\\nThrough various theoretical and experimental studies, it is proved that minimal set of the amino acid is sufficient for protein folding [21].\\n\\nThe minimal set of representative residues with similar features can be achieved by grouping together the 20 amino acids by clustering.\\n\\nThis method is called as reduced or simplified amino acid alphabet.\\n\\nSeveral simplified amino acid alphabets have been proposed, which have been applied to pattern recognition method in the prediction of protein structure [22], for generation of consensus sequences from multiple alignments, and for protein folding prediction [23].\\n\\nVarious computational predictor has used simplified amino acids to predict the solubility on overexpression, remote homology detection [19], and identify the defensin peptide family [24], effects of cofactors on conformation transition [25], DNA-binding proteins [26], heat shock protein families [27], inter-residue interaction [28], protein adaptation to mutation [29], and protein disorder [30].\\n\\nIn the present study, a random forest algorithm has been deployed to predict metal ion binding protein based on the simplified amino acids proposed by Murphy et al.[21].\\n\\nDataset construction\\nAll the protein sequences were downloaded from the UniProt database [31] available at http://www.uniprot.org/.\\n\\nThe downloaded sequences, annotated as metal containing, were grouped into eight subsets.\\n\\nEach of the subsets, containing one of the metal species viz., calcium, cobalt, copper, iron, magnesium, manganese, nickel, and zinc was considered to be metal-containing while all other entries were considered to be metal-free.\\n\\nRedundancy among the amino acid sequences was removed by clustering analysis using the cd-hit program [32] with the threshold of 50% level of percentage of identity, analogous by the UniRef 50 list [33] available in the UniProt database.\\n\\nThis resulted in eight data sets containing 186 calcium-containing proteins, 69 cobalt-containing proteins, 215 copper-containing proteins, 315 iron-containing proteins, 961 magnesium-containing proteins, 386 manganese-containing proteins, 74 nickel-containing proteins, and 1,716 zinc-containing proteins.\\n\\nAll proteins containing calcium, cobalt, copper, magnesium, manganese, nickel, or zinc were then subtracted from the UniRef50 list, resulting in a collection of non-metalloproteins.\\n\\nThe workflow of dataset construction is shown in Fig.1.\\n\\nThe problem of the imbalanced dataset can be solved as proposed by Cohen et al.[34].\\n\\nFirstly, they pre-processes the data to re-establish class balance (either by upsizing the minority class or downsizing the majority class).\\n\\nSecondly, they modify the learning algorithm itself to copy with imbalanced data.\\n\\nIn this study, we pre-processed the data which contains a balanced set of metal and non-metal ions.\\n\\nFor this construction, non–metallo-proteins datasets sequences were randomly selected in order to have balanced set of metal and non-metal binding proteins for each metal ion, respectively.\\n\\nFeature extraction by simplified amino acid alphabets\\nIn order to investigate the effect of a particular class of amino acids on metal ion binding, the 20 amino acids were grouped into various classes based on certain common properties and the composition of the reduced sets of amino acids was considered.\\n\\nFeature extraction is done using the simplified amino acid alphabet.\\n\\nIt estimates that reduced alphabets containing 10–12 letters can be used to design foldable sequences for a large number of protein families.\\n\\nThis estimate is based on the observation that there is little loss of the information necessary to pick out structural homologs in a clustered protein sequence database when a suitable reduction of the amino acid alphabet from 20 to 10 letters is made.\\n\\nA simplified amino acid alphabet of 18 characters was used (Table 1).\\n\\nIt is based on three independent amino acid classifications.\\n\\nConformational similarity\\nConformational similarity indices are proposed by Chakrabarti and Pal [28] based on different residues are computed using the distribution of the main-chain and side-chain torsion angles and values have been used to cluster amino acids in proteins.\\n\\nIn this method, the conformational similarity of the 20 amino acids based on torsion angles, which contains seven clusters ([CMQLEKRA], [P], [ND], [G], [HWFY], [S], and [TIV]) are used to represent variables.\\n\\nBLOSUM 50 substitution matrix\\nThe BLOSUM-50 matrix is proposed by Cannata et al.[35].\\n\\nThe matrix is deduced from amino acid pair frequencies in aligned blocks of a protein sequence database and is widely used for sequence alignment and comparison.\\n\\nThe BLOSUM 50 matrix that they group together on the basis of the possibility of foldable structures and consists of the clusters: [P], [KR], [EDNQ], [ST], [AG], [H], [CILMV], and [YWF].\\n\\nHydrophobicity\\nThe hydrophobicity scale by Rose et al.\\n\\n[36] is correlated to the average area of buried amino acids in globular proteins.\\n\\nThis results in a scale which is not showing the helices of a protein, but rather the surface accessibility.\\n\\nIt is based on the hydrophobicity scale which consists of the following cluster: [CFILMVW], [AG], [PH], [EDRK], and [NQSTY].\\n\\nRandom forest predictions\\nRandom forest is a classification algorithm [37] that uses an ensemble of tree-structured classifiers.\\n\\nThe random forest is a popular algorithm that has been used in designing computational predictors for various biological problems.\\n\\nRandom forest is an ensemble learning method for classification.\\n\\nThe random forest classifies a new object with an input vector, the input vector is predicted by each decision tree in the forest.\\n\\nEach tree provides a classification with votes and the class with most votes will be output as the predicted class.\\n\\nIt is implemented by using Weka package [38, 39].\\n\\nTo ensure that parameter estimation and model generation of random forest is completely independent of the test data, a nested cross-validation procedure is performed.\\n\\nNested cross-validation [40] means that there is an outer cross-validation loop for model assessment and an inner loop for model selection.\\n\\nIn this study, the original samples are randomly divided into k = 10 parts in the outer loop.\\n\\nEach of these parts is chosen one by one for assessment, and the remaining nine of 10 samples are for model selection in the inner loop where a type of cross-validation using the so-called out-of-bag samples is performed.\\n\\nMeasurement of classifier’s performance\\nWhen the predictor was focused on the problem of distinguishing proteins containing a certain type of metal ion from proteins that do not contain any type of metal, it is important that both sets contain the same number of proteins; otherwise, several figures of merit that are commonly used to monitor the prediction reliability would be seriously biased.\\n\\nThe reliability of the predictions was monitored with the following quantities.\\n\\nIf a protein of type 1 must be distinguished from a protein of type 2, a prediction was considered to be a true-positive if type 1 was correctly predicted; it was considered to be a true-negative if type 2 was correctly predicted; it was considered to be a false-negative if a type 1 protein was predicted to be a type 2 protein; and it was considered to be a false-positive if a type 2 protein was predicted to be a type 1 protein.\\n\\nConsequently, the following figures of merit, the sensitivity, the specificity, the accuracy, the Mathews correlation are computed [41] as shown in the Eq.\\n\\n(1) below.\\n\\n(1) A c c = T P + T N T P + F P + T N + F N , S n = T P T P + F N , S p = T N T N + F P M C C = ( T P × T N ) - ( F N × F P ) ( T P + F N ) ( T N + F P ) ( T P + F P ) ( T N + F N )\\nBy using a simplified amino acid alphabet based on three independent amino acid classifications, amino acid cluster variables were obtained.\\n\\nConformational similarity contains seven clusters: [CMQLEKRA], [P], [ND], [G], [HWFY], [S], and [TIV].\\n\\nBLOSUM 50 substitution matrix contain [P], [KR], [EDNQ], [ST], [AG], [H], [CILMV], and [YWF].\\n\\nThe hydrophobicity scale contains [CFILMVW], [AG], [PH], [EDRK], and [NQSTY].\\n\\nOut of 20 amino acid clusters, cluster [P] and [AG] which are present in more than one simplified alphabet were considered only once and these results in 18 variables (Table 1).\\n\\nThe 18 variables are represented with percentage of occurrence as follows.\\n\\n(2) p c a a , i = 100 n a a , i n r e s i ,\\nThe percentage of occurrence pcaa,i of the amino acid aa in the ith protein was computed for each of the 20 types of amino acids in each protein as per Eq.\\n\\n(2).\\n\\nThe protein sequences represented by the amino acid percentage of occurrence using 18 variables were employed with random forest algorithm using Weka suite.\\n\\nThe metallo-proteins were identified using all the 18 variables with high accuracy ranging from 69% for zinc and 90% for nickel (Table 2).\\n\\nMoreover, prediction performance was studied by feature selection method by removing one variable at a time and maintaining the highest value in performance indices.\\n\\nMeasurements are removed until there is an unacceptable degradation in system performance.\\n\\nThe use of feature selection method will eliminate alphabets which are irrelevant or redundant features, and thus it improves the accuracy of the learning algorithm.\\n\\nTo select an optimal subset of variables, we first analyzed how individual attributes from the initial set of 18 variables, contributed to predictive accuracy.\\n\\nFor feature selection, we employed the wrapper approach as it uses the learning algorithm to test all existing feature subsets.\\n\\nThe wrapper method will use a subset of features to train the model.\\n\\nBased on the inferences, the feature can be added or removed to improve the accuracy of the learning algorithm.\\n\\nWe used a backward feature elimination, by starting with the full set and deleting attributes one at a time for searching the feature space [42, 43].\\n\\nThe specific steps of the wrapper approach followed in this study.\\n\\nPartitioning the data with 10-fold cross-validation (k = 10).\\n\\nOn each cross-validation training set, the learning machine was trained by using all 18 variables, to produce a ranking of the variables according to the importance.\\n\\nThe cross-validation test set predictions were recorded.\\n\\nThen the variables are removed which are least important one by one and another learning machine was trained based on remaining variables, the cross-validation test set predictions were once again recorded.\\n\\nThis step is repeated by removing each variable until at small number remain.\\n\\nAggregate the predictions from all 10 cross-validation test sets and compute the aggregate accuracy at each step down in a number of variables.\\n\\nBy the following the above steps, feature selection of variables was done by wrapper approach employing random forest machine learning algorithm.\\n\\nBased on aggregate accuracy, the important variables for copper ion prediction are PH variable and least preferred variables are AG and CMQLEKRA (Table 3).\\n\\nBased on Table 3, it is understood that removing PH variable decrease the accuracy of the classifier whereas removing AG and CMQLEKRA improves the accuracy of the classifier.\\n\\nFor calcium ion prediction, the least important variable is P and EDNQ; removing these variable improves the performance of the classifier (Table 4).\\n\\nSimilarly, for cobalt ion prediction, the variable CILMV is the least preferred variable as it affects the performance of the classifier (Table 5).\\n\\nFor iron ion prediction, removing variable CFILMVW improves the performance of the classifier (Table 6).\\n\\nFor magnesium, ion prediction variable ST and ND are least preferred variables (Table 7).\\n\\nFor manganese ion prediction, removing variable FWY improves the accuracy of the classifier (Table 8).\\n\\nFor nickel ion prediction, variable EDRK is the least preferred one (Table 9).\\n\\nFor zinc ion prediction, the least preferred variable is HWFY (Table 10).\\n\\nFor example, cobalt metal binding protein can be discriminated from non-metal ions with all 18 variables with the accuracy of 85%.\\n\\nIt can be seen that, on removing variable V14 (CILMV) from the subset, the accuracy of the predictor improves from 85% to 87%.\\n\\nAfter removing of variables V8 (CFILMVW), V3 (ND), V17 (EDNQ), V10 (PH), and V16 (ST), the accuracy values are in the range from 86% to 87%.\\n\\nThere is a drastic decrease in accuracy of the classifier by removing the variable V12 (NQSTY) to 84%.\\n\\nNo further reduction of the set was possible, as the performance of random forest classifier dropped if any further attributes were eliminated.\\n\\nIt can be seen that accuracy of prediction of metal binding proteins can be improved (e.g., calcium from 74% to 77%, cobalt from 83% to 85%, and nickel from 69% to 77%) by elimination of certain noisy features, up to certain limit and further improvement is then impossible.\\n\\nAccording to this backward strategy of feature selection, it can be observed that the prediction performance can be slightly improved.\\n\\nSome common variables rejected are V14 (CILMV) in calcium and cobalt, V8 (CFILMVW) in copper and iron.\\n\\nIn this work, a new random forest based approach is developed combining hybrid feature of simplified amino acid alphabets for prediction of metal ion binding sites of iron, copper manganese, magnesium, nickel, calcium, cobalt, and zinc from amino acid sequence data.\\n\\nThe result indicates that the random forest model has a high prediction accuracy in predicting metal ion binding sites.\\n\\nThese metal binding prediction methods are helpful to avoid the selection of ‘impossible’ targets in structural biology and proteomics.\\n\\nConstruction of dataset used for prediction.\\n\\nThe performance graph of the Random forest classifier using feature selection (10-fold cross validation for cobalt ion prediction).\\n\\nThe 18 variables, obtained by merging three simplified alphabets of amino acid residues used to represent protein sequences\\nOverall prediction performance of the classifier in predicting individual metal ion binding sites\\nFeature selection of variables in improving the performance of copper ion prediction against proteins that lack metal ions\\nFeature selection of variables in improving the performance of calcium ion prediction against proteins that lack metal ions\\nFeature selection of variables in improving the performance of cobalt ion prediction against proteins that lack metal ions\\nFeature selection of variables in improving the performance of iron ion prediction against proteins that lack metal ions\\nFeature selection of variables in improving the performance of magnesium ion prediction against proteins that lack metal ions\\nFeature selection of variables in improving the performance of manganese ion prediction against proteins that lack metal ions\\nFeature selection of variables in improving the performance of nickel ion prediction against proteins that lack metal ions\\nFeature selection of variables in improving the performance of zinc metal ion prediction against proteins that lack metal ions\\n\\nTitle: Analysis of differences in human leukocyte antigen between the two Wellcome Trust Case Control Consortium control datasets\\n\\nThe Wellcome Trust Case Control Consortium (WTCCC) study was a large genome-wide association study that aimed to identify common variants associated with seven diseases.\\n\\nThat study combined two control datasets (58C and UK Blood Services) as shared controls.\\n\\nPrior to using the combined controls, the WTCCC performed analyses to show that the genomic content of the control datasets was not significantly different.\\n\\nRecently, the analysis of human leukocyte antigen (HLA) genes has become prevalent due to the development of HLA imputation technology.\\n\\nIn this project, we extended the between-control homogeneity analysis of the WTCCC to HLA.\\n\\nWe imputed HLA information in the WTCCC control dataset and showed that the HLA content was not significantly different between the two control datasets, suggesting that the combined controls can be used as controls for HLA fine-mapping analysis based on HLA imputation.\\n\\nGenome-wide association studies (GWAS) have identified many genetic variations influencing complex traits.\\n\\nHowever, the variants identified to date only explain a portion of heritability, possibly because there remain many unidentified variants with small effects [1,2].\\n\\nTo detect associations with small genetic effects, large study cohorts are required to obtain sufficient statistical power [3].\\n\\nTherefore, there have been ongoing efforts to increase the size of study cohorts.\\n\\nOne possible way to increase the sample size is to utilize publicly available cohorts.\\n\\nPublicly available control datasets can be particularly useful, because they can be used as controls for many different diseases.\\n\\nOne of the popular publicly available datasets is the Wellcome Trust Case Control Consortium (WTCCC) dataset [4].\\n\\nThe WTCCC study aimed to identify associations of genetic variations with seven diseases across the genome.\\n\\nThe dataset consists of the genotype data of ~2,000 cases of each of the seven diseases and a common control set of ~3,000 individuals.\\n\\nThe controls came from two sources: ~1,500 individuals from the 1958 British Birth Cohort (58C) and ~1,500 individuals selected from blood donors recruited as part of the WTCCC project (UK Blood Services [UKBS] controls).\\n\\nThe WTCCC performed tests to check differences in the allele frequencies of genome-wide single-nucleotide polymorphisms (SNPs) between the 58C and UKBS groups.\\n\\nThe results indicated that there were no significant differences between the two control groups despite subtle dissimilarities in the population groups sampled, DNA processing techniques, and age.\\n\\nMore recently, the analysis of human leukocyte antigen (HLA) genes has become widespread owing to the development of HLA imputation technology [5-7].\\n\\nThe HLA complex, which encodes the major histocompatibility complex (MHC) proteins and is located on chromosome 6 (Chr.6p21.1-6p21.3), is the most polymorphic and genetically variable region in the human genome.\\n\\nHLA comprises two main groups; class I antigens (HLA-A, -B, and -C) and class II antigens (HLA-DR, -DQ, and -DP) which form key determinants of histocompatibility.\\n\\nLarge-scale HLA association analyses were previously difficult due to the high cost of HLA typing, but have recently become more commonly feasible through the help of HLA imputation, which can predict HLA information from SNP data without HLA typing [6,8].\\n\\nHLA association analysis is similar to other association analyses in that a large sample size is critical for the successful mapping of variants.\\n\\nThus, the use of publicly available datasets such as the WTCCC control dataset can also be helpful in HLA analysis.\\n\\nHere, we extend the between-control homogeneity analysis of the WTCCC study to HLA.\\n\\nOur goal was to systematically examine potential differences in HLA between the 58C and UKBS controls in the WTCCC dataset.\\n\\nAlthough the WTCCC project reported that there were only few differences in the genome-wide SNP frequencies between the two control groups, the difference in HLA region has not been examined before.\\n\\nIf the difference in HLA is negligible between the two control groups, this might suggest that these combined controls can be used as additional controls for HLA fine-mapping association studies.\\n\\nFor this purpose, we imputed HLA information for the two control datasets using recently developed HLA imputation technology [5] with a large European reference panel [9].\\n\\nThe imputation yielded information on HLA alleles, amino acid residues, and intragenic SNPs in binary markers.\\n\\nThen, we tested the significance of differences in these markers between the control datasets.\\n\\nTitle: Summary of the cohorts\\n\\nA detailed description of the study samples can be found in the original WTCCC GWAS paper [4].\\n\\nIn summary, the WTCCC dataset includes cases of seven major complex diseases: type 1 diabetes, type 2 diabetes, coronary heart disease, hypertension, bipolar disorder, rheumatoid arthritis and Crohn disease, each with ~2,000 individuals, and ~3,000 shared controls from two cohorts.\\n\\nAmong them, we only used the two control cohorts.\\n\\nThe control samples were derived from two sources: half from the 1958 Birth Cohort (58C) and the remainder from UKBS samples.\\n\\nThe 1958 Birth Cohort (also known as the National Child Development Study) consists of all births in England, Wales, and Scotland in 1958.\\n\\nThe second control group consists of 1,500 blood donors recruited from the UKBS in England, Scotland, and Wales.\\n\\nTitle: SNP quality control and filtration\\n\\nIn the WTCCC dataset, 4,351 SNPs had already been excluded based on a Hardy-Weinberg equilibrium (HWE) test threshold of p <\\u20095.7\\u2009×\\u200910-7 in the combined set of 2,938 controls, as well as 93 SNPs with p-values < 5.7\\u2009×\\u200910-7 from either a one- or two-degrees of freedom test for differences between the two control groups.\\n\\nIn this analysis, we only focused on autosomal variants (459,059 SNPs).\\n\\nWe further performed additional SNP quality control (QC) ﬁlters.\\n\\nWe removed SNPs that showed a genotype failure rate greater than 0.05, SNPs with a minor allele frequency (MAF) < 5%, and SNPs with an HWE p < 0.00001.\\n\\nAfter applying these QC criteria to the combined control cohort, we obtained 358,085 SNPs.\\n\\nTitle: Principal component analysis\\n\\nWe conducted principal component analysis (PCA) with PLINK (v1.90b) [10] (--pca) to analyze systematic differences in genome-wide allele frequencies between the two cohorts.\\n\\nPCA is a popular dimensionality reduction technique that can account for population stratification in genetic data [11].\\n\\nPrior to applying PCA, we used PLINK to prune the SNP data in windows of 50 bps, removing a SNP from each pair of SNPs with an r2 > 0.2.\\n\\nA total of 71,083 SNPs remained after pruning.\\n\\nWe extracted the top principal components (PCs) that explained the most variance in the genotype data.\\n\\nThe top two and three PCs were used to build two- and three-dimensional PC plots.\\n\\nThe top 20 components were used as covariates in the logistic regression for the genome-wide SNPs, as well as in the logistic regression for the HLA binary markers.\\n\\nTitle: Phase 2 HapMap dataset\\n\\nWe obtained the publicly available Phase 2 HapMap data for 270 individual samples from three different populations (Central European [CEU], Yoruba in Ibadan, Nigeria [YRI], and the East Asian combined sample of Japanese in Tokyo and Han Chinese in Beijing [Asian: JPT + CHB]) [12].\\n\\nWe used this dataset to perform PCA to quantify the population structure of the samples.\\n\\nTitle: Kolmogorov-Smirnov test\\n\\nThe Kolmogorov-Smirnov (K-S) test was used to assess the equality of frequency distributions between the 58C and UKBS cohorts.\\n\\nWe calculated the corresponding D statistic and p-value of the test using the basic stats package in R. p-values were two-sided.\\n\\nTitle: Imputation of HLA alleles\\n\\nWe used SNP2HLA [5] to impute HLA information for the 58C and UKBS cohorts, where the HLA information was generated as binary markers for (1) HLA alleles, (2) amino acid residues, and (3) intragenic SNPs.\\n\\nFor the reference panel for imputation, we employed the Type I Diabetes Genetics Consortium dataset, which consists of 5,225 individuals of European ancestry [9].\\n\\nThe genomic region was restricted to the MHC complex region (chr6:29-34Mb, hg18) on chromosome 6 before imputation.\\n\\nAs a result, we obtained the imputed genotypes of 8,961 binary markers, which were composed of 424 markers for HLA alleles (e.g., HLA_A_0101; the presence of HLA-A*01:01 allele in the HLA-A gene), 1,276 markers for amino acid residues (e.g., AA_A_245_30020064_V; the presence of valine at the 245th amino acid position of the HLA-A gene), 1,390 markers for intragenic SNPs (e.g., SNP_A_30020064; the intragenic SNP at base position of 30020064 in the HLA-A gene), and 5,871 markers for genomic variants (e.g., rs969931).\\n\\nTitle: Allele frequency difference analysis between the two control cohorts\\n\\nWe performed association tests to compare allele frequencies between the control cohorts.\\n\\nWe used the logistic regression model in PLINK v.1.90b (--logistic) [10].\\n\\nTo set the phenotypes, the UKBS cohort was set as “control” and the 58C cohort as “case.” We first conducted two-cohort association tests for genome-wide SNPs across the genome.\\n\\nSince we did not have regional information on the samples, which was used in similar analyses in the WTCCC study, we controlled for possible population stratification by including the top 20 PCs as additional covariates.\\n\\nFor the HLA analysis, we tested all imputed markers, including HLA alleles, amino acids, and SNPs in the MHC region.\\n\\nSimilar to the genome analysis, we included the same top 20 PCs as covariates in the HLA analysis.\\n\\nTitle: Principal component analysis\\n\\nWe first used PCA to analyze differences between the two control cohorts at the population level.\\n\\nWe calculated PCs in four ways: (1) using the 58C cohort only, (2) using the UKBS cohort only, (3) using the two cohorts combined, and (4) using the combined set with the HapMap data (N=270) integrated.\\n\\nWe applied SNP QC filters before PCA (see Methods).\\n\\nPCs were calculated based on the variance-standardized relationship matrix among the individuals included in each analysis.\\n\\nFig.1A and 1B show the PCs in the 58C and UKBS cohorts, respectively, and Fig.1C shows the results when the two cohorts were merged.\\n\\nFig.1C demonstrates high similarity in the ranges of the first two PCs between the two cohorts, except for two outliers (one in each cohort) at the bottom right corner of the plot.\\n\\nFig.1D is a tridimensional plot of the PCs of the two control cohorts.\\n\\nThe red sphere corresponds to the 58C group, and the blue indicates the UKBS group.\\n\\nIn the 3-PC plot, similar to the 2-PC plot, the two cohorts were not visually distinct from each other.\\n\\nFig.1E presents the PCs of the WTCCC merged with three HapMap populations (CEU, YRI, and Asian [CHB, JPT]).\\n\\nThe plot shows that the 58C, UKBS, and CEU cohorts were grouped together in the PC plot, showing that the two control cohorts had European ancestry homogeneous to the CEU.\\n\\nTitle: SNP allele frequency distribution of the two cohorts\\n\\nWe examined the allele frequencies of genome-wide SNPs in the two cohorts, using 358,085 autosomal SNPs from 2,938 samples (total genotyping rate, 0.996).\\n\\nTable 1 provides descriptive statistics of the allele frequency distribution in each cohort.\\n\\nThese statistics did not show any distinctive differences between the two cohorts.\\n\\nIn addition, Fig.2A and 2B show the patterns of the MAF differences.\\n\\nWe performed the K-S test, a general nonparametric method for comparing the density distributions of two datasets.\\n\\nFig.2C shows a plot of the empirical cumulative density function (ECDF) curves of the two cohorts.\\n\\nThe K-S test returns a D statistic, which refers to the absolute maximum distance between the ECDF of the two samples and a p-value corresponding to the D statistic.\\n\\nD was 0.015 and the p-value was 0.819; therefore, we could not reject the null hypothesis that the two datasets were drawn from the same distribution.\\n\\nTitle: Allele frequency association test between the two cohorts\\n\\nNext, we performed a GWAS to detect genomic variants that showed significant differences in the MAF between the two cohorts.\\n\\nIn the original study, the WTCCC performed a similar test to check differences in the allele frequencies between the 58C and UKBS cohorts using genome-wide scans.\\n\\nIn that analysis, they stratified the samples based on their broad geographical origin (12 UK regions).\\n\\nThe result of the test statistics in a quantile-quantile (Q-Q) plot indicated that there were no significant differences between the two control groups.\\n\\nThey showed that their samples did not show a clear population structure in multidimensional scaling and PCA plots, despite the 12 different origins of the samples.\\n\\nOur association analysis was similar to the analysis in the original paper, but different in that we included the top 20 PCs as covariates instead of performing a stratified analysis based on 12 geographical regions.\\n\\nThe reason for this difference is that the geographical origin information was not readily available for download from the WTCCC website.\\n\\nTo our knowledge, only the genotype data and the disease status were publicly available to researchers.\\n\\nThus, in general, a researcher using the WTCCC controls would likely use only PCs as covariates instead of geographical information.\\n\\nMoreover, even if a researcher were to obtain the geographical region information for the WTCCC controls, it would not possible to use this information as a covariate in the case/control analysis without having the same information for cases.\\n\\nTherefore, it is worthwhile to examine the differences between the two control cohorts in an analysis using only PCs as covariates.\\n\\nSpecifically, we tested the MAF difference between the two cohorts using logistic regression, while including the top 20 PCs as covariates to account for regional differences in the samples.\\n\\nTo this end, we set one cohort as cases (58C) and another cohort as controls (UKBS).\\n\\nWe then performed association tests to identify the associations between SNPs and the cohort identifier.\\n\\nFig.3A shows the Manhattan plot of associations.\\n\\nWe did not find any loci that exceeded the threshold for genome-wide significance of 5.7 × 10-7 (red line), which was the threshold used in the WTCCC study.\\n\\nThis is unsurprising because the dataset we used was already filtered to remove any SNPs with p < 5.7 × 10-7 in the MAF difference test of the original study.\\n\\nHowever, we could find several loci with moderate significance (p < 1 × 10-5, blue line).\\n\\nFig.3B demonstrates that the association tests had slight inflation (genomic control inflation factor [λ]: 1.04).\\n\\nUpon visual inspection, the Q-Q plot appeared slightly more inflated in our analysis than the Q-Q plot presented in the original paper (Fig.3B of the WTCCC study [4]), possibly because the exact regional information was not included in the analysis.\\n\\nAn exact comparison of inflation was not possible because the result of the inflation statistic in the original study was not available.\\n\\nTitle: HLA allele frequency distribution of the two cohorts\\n\\nNext, we examined the HLA allele frequencies in each cohort.\\n\\nWe imputed the HLA information using SNP2HLA.\\n\\nThe imputation gave us binary markers for (1) HLA alleles, (2) amino acid residues, and (3) intragenic SNPs.\\n\\nUsing imputed binary markers, we extracted two-digit and four-digit HLA alleles for each sample.\\n\\nAs a result, we obtained a total of 23,504 imputed alleles for eight genes in 2,938 samples.\\n\\nWe focused on the two-digit alleles in this analysis.\\n\\nWhen we counted the number of unique two-digit alleles in each gene, we found 18 alleles for HLA-A, 27 alleles for HLA-B, 13 alleles for HLA-C, three alleles for HLA-DPA1, 17 alleles for HLA-DPB1, six alleles for HLA-DQA1, five alleles for HLA-DQB1, and 13 alleles for HLA-DRB1.\\n\\nMost of the alleles (97) were observed in both cohorts, and five alleles were detected in a single cohort (two alleles for 58C and three alleles for UKBS).\\n\\nThe two-digit HLA allele frequencies are listed in Supplementary Table 1.\\n\\nTable 2 provides the descriptive statistics of the two-digit HLA allele frequency distribution in each cohort.\\n\\nThese statistics did not show distinctive differences between the two cohorts.\\n\\nThe mean absolute difference in the HLA allele frequencies was 0.00562.\\n\\nFig.4A and 4B show the patterns of the HLA allele frequency differences.\\n\\nWe then performed the K-S test for each HLA gene, and the results are presented in Fig.4C.\\n\\nAll the HLA genes showed non-significant p-values in the K-S test, demonstrating that there was no significant difference in the imputed HLA allele frequencies between the two control cohorts.\\n\\nTitle: HLA association test between the two cohorts\\n\\nFinally, we tested the HLA difference between the two cohorts using logistic regression.\\n\\nSimilar to the genome-wide analysis above, we included the top 20 PCs as covariates to account for regional differences among the samples.\\n\\nAgain, we set one cohort as cases (58C) and the other cohort as controls (UKBS).\\n\\nWe then performed association tests to identify associations between markers in the MHC region (including both the imputed binary markers and the genotyped SNPs) and the cohort identifier.\\n\\nFig.5A shows the Manhattan plot of associations.\\n\\nWe did not find any binary marker that exceeded the threshold for genome-wide significance of 5.7 × 10-7 (red line), which was the threshold used in the WTCCC study.\\n\\nFig.5B demonstrates that the association tests did not show inflation (λ = 0.92 for all markers and λ = 0.93 for markers with a frequency ≥ 0.05).\\n\\nOverall, both the Manhattan plot and the Q-Q plot showed that there was no significant difference in HLA between the two control cohorts, emphasizing that the two control cohorts can be used as a single combined control for HLA analyses.\\n\\nIn the present study, we compared the two control cohorts of the WTCCC dataset (UKBS and 58C).\\n\\nWe focused on between-cohort differences in the HLA genes, which belong to the polymorphic region of chromosome 6.\\n\\nIn both the association analysis of the genome-wide SNPs and the association analysis of the imputed HLA markers, no alleles showed a significant difference in allele frequency between the cohorts.\\n\\nFurthermore, in the K-S test, the two cohorts did not show statistically significant differences in any HLA gene.\\n\\nThese results suggest that the two control cohorts are genetically homogeneous in HLA, and that the combined controls of the WTCCC can be used as supplementary controls for HLA fine-mapping studies as well, as for GWAS.\\n\\nHowever, we note that researchers must evaluate homogeneity between their own control cohort and the combined WTCCC controls if they are to use the WTCCC data as additional controls, because we only evaluated the homogeneity between the two WTCCC control datasets themselves.\\n\\nPrincipal component (PC) analysis of genotypic frequencies of genome-wide single-nucleotide polymorphism markers.\\n\\n(A) The first two PCs for 58C individuals.\\n\\n(B) The first two PCs for UK Blood Services (UKBS) individuals.\\n\\n(C) The first two PCs for 58C and UKBS individuals.\\n\\n(D) The first three PCs for 58C and UKBS individuals.\\n\\n(E) The first two PCs for 58C and UKBS individuals integrated with the HapMap populations (Phase2).\\n\\nComparison of single-nucleotide polymorphism minor allele frequency (MAF) between the two cohorts.\\n\\n(A) MAF comparison of the two cohorts.\\n\\n(B) Density plot of the absolute MAF difference of the two cohorts.\\n\\n(C) ECDF curve plot for the Kolmogorov-Smirnov test.\\n\\nUKBS, UK Blood Services.\\n\\nGenome-wide association results and quantile-quantile (Q-Q) plots for genome-wide association study p-values.\\n\\n(A) Manhattan plot of genome-wide association results.\\n\\nWithin each chromosome position shown on the x axis, log10 (p-values) of the association statistics are visualized on the y-axis.\\n\\nThe red line denotes genome-wide significance (5.7 × 10-7).\\n\\n(B) Q-Q plot of association p-values.\\n\\nRed line denotes the expected values under no inflation.\\n\\nComparison of human leukocyte antigen (HLA) allele frequency between the two cohorts.\\n\\n(A) HLA allele frequency comparison of the two cohorts.\\n\\n(B) Density plot of the absolute HLA allele frequency difference of the two cohorts.\\n\\n(C) p-value of the Kolmogorov-Smirnov test in each of the HLA genes.\\n\\nUKBS, UK Blood Services; AF, allele frequencies.\\n\\nImputed human leukocyte antigen (HLA)-wide association results and quantile-quantile (Q-Q) plots for p-values.\\n\\n(A) Manhattan plot of MHC complex region-wide association results.\\n\\nThe p-values are from the binary markers for imputed HLA alleles (yellow), amino acid residues (red), genotyped single-nucleotide polymorphisms (SNPs) (gray) and intragenic SNPs (deep gray).\\n\\n(B) Q-Q plots of association p-values for MHC binary markers (black), MHC binary markers with allele frequencies (AF)≥0.05 (red), and genome-wide SNPs (blue).\\n\\nRed line denotes the expected values under no inflation.\\n\\nMAF, minor allele frequency.\\n\\nTitle: Summary statistics of MAF for single-nucleotide polymorphisms\\n\\nTitle: Summary statistics of HLA AF\\n\\nScience and Engineering and Their Different Roles in Investigations of the Genetic Portion of the Etiology of Complex Human Traits\\r\\n\\r\\nOwing largely to recent advances in technology, both in molecular biotechnology and computer science, the field of human genetics has been undergoing a series of rapid metamorphoses and \"wide-eyed” optimism, some of which may eventually contribute to our understanding of the ephemeral relationships between genetic variation and phenotypic variation in man, while others may set us back decades by encouraging us to waste resources and energy pursuing blind technological pathways-all too often without focus on the underlying the scientific questions-to solving problems for which the technology is neither the problem nor the solution.\\r\\n\\r\\nThe recent emphasis on population level biobanks and large cohort and case control studies for gene mapping are such an example of taking industrial and technology-driven approaches to fundamental biological questions, which are unlikely to yield much progress in scientific understanding (Le Fanu, 1999; Holtzman, 2001; Millikan, 2002; Weiss and Terwilliger, 2002; Terwilliger and Weiss, 2003).\\r\\n\\r\\nWith the rapid influx of scientists with extremely heterogeneous background and expertise, or perhaps more worrisome, their extreme degree of narrow training specialization, there are also dangers of wasting substantial effort to document what has already been known in principle about complex traits for nearly a century, and in practice by hundreds of studies in the past 20 years.\\r\\n\\r\\nAre we reinventing the wheel, and more critically, charging down known “blind alleys” at a substantial cost in time and money, especially by being in too much of a hurry?\\r\\n\\r\\nIt may be especially important for the likely readership of a journal entitled “Genomics and Informatics” to consider the background and nature of the underlying questions molecular biologists and computational scientists are looking to solve in humans.\\r\\n\\r\\nMethods are ways of making progress in science; both are important, but we should not make the mistake of equating the former with the latter (Terwilliger and Goring, 2000; Terwilliger et al., 2002a, 2002b; Terwilliger and Weiss, 2003; Weiss, 1993).\\r\\n\\r\\nWhen one desires to study the etiology of some trait in a mouse, experimental manipulations, through altering environmental exposures, mutagenesis, and breeding experiments are used to ask the question “if a mouse were exposed to A, what would happen to the mouse?”\\r\\n\\r\\nFor example, so called “knockout mice”-in which a given gene is destroyed so that its product is not produced by the mouse at all-can be engineered to see what would happen to a given strain of mouse if a given protein were not produced at all.\\r\\n\\r\\nIn the case of an environmental exposure, some mice from a given clonal population might be exposed to some industrial chemicals, while others are not, to examine the phenotypic consequences later in their lives.\\r\\n\\r\\nIn the case of gene mapping in the mouse, one selects inbred strains on the basis of their phenotype, performs a backcross (or other controlled mating experiment) in which the amount of total genotypic variation is limited to a minimal amount (one chromosome per strain, since inbred strains are homozygous throughout their genomes), to try and correlate the observed phenotypic variation in the offspring to which strain certain chromosomal segments were derived from.\\r\\n\\r\\nThis can be a powerful technique for identifying which genes harbor variation in given inbred strains that CAN have an influence on some phenotype when both background genetic variation and environmental exposures are rigidly controlled.\\r\\n\\r\\nSuch breeding experiments often require hundreds of offspring from a given backcross for mapping to be successful, however, in a case where only two chromosomes segregate in the population, where linkage and linkage disequilibrium are the same thing, and where there is no environmental or cultural variation among organisms!\\r\\n\\r\\nEnvironmental studies typically subject mice to grossly increased levels of exposure to putative risk factors relative to the problem of avoiding harmful human exposures, in order to generate a strong enough signal to detect an effect clearly.\\r\\n\\r\\nIn a similar way, experiments on inbred laboratory mice greatly simplify the causal environment.\\r\\n\\r\\nEven so, such breeding experiments by themselves are often insufficiently powerful for successful gene identification, to which end further breeding experiments are often required to generate so-called congenic strains in which mice are crossed back to one of the original strains until only a given small genetic region carries genetic variation from the other strain, thus essentially creating a new strain which is genetically identical to one of the parents except for a single gene region, selected on the basis of phenotypic effect of that gene, combined with genetic information that the remainder of the genome is from the other strain.\\r\\n\\r\\nSuch techniques may be necessary to isolate which of the many genetic factors in a given region has a functional consequence, and furthermore, may be needed to examine the effects of a given variant form of a given gene in a variety of different genetic backgrounds.\\r\\n\\r\\nSuch experiments demonstrate consistently that the same variant can have dramatically different phenotypic consequences in different strains, to the point where even many knockouts have no phenotypic consequences in some strains, while they can be devastating in others.\\r\\n\\r\\nWhen trying to understand the phenotypic consequences of variation in genetic and environmental exposures in human, it is naturally impossible to perform experiments as would be scientifically desirable.\\r\\n\\r\\nWith the exception of controlled clinical trials, it is very difficult to alter the kinds of natural environmental exposures we encounter in life, in a satisfactorily directed way; of course, we cannot do mutagenesis experiments or designed breeding(especially not inbreeding) to assist in our mapping efforts.\\r\\n\\r\\nThe science of epidemiology has focused for generations on how to identify environmental risk factors from observational data, where-for example-cases of a given disease and controls might be ascertained from a population and subjected to questioning about their earlier environmental exposures, a practice which has led to some important findings, but mostly of the “sledgehammer\" variety, for instance demonstrating that most lung cancer victims smoked at some point in their lives, while only a small portion of the healthy population did. Indeed, even factors that have been thought to be understood regularly turn out not to be so clear after all, as one clearly sees in the daily epidemiological study reports in major media outlets.\\r\\n\\r\\nIn the absence of controlled experiments, human geneticists are forced to become detectives, and look for natural experiments, in which the sorts of matings we would like to observe have been done by people of their own free will (and without regard to our biomedical interests), or where environmental exposures have been intrinsically altered in such a way as to make for a useful resource for epidemiological investigation.\\r\\n\\r\\nThus rather than being a formally experimental science, as would be the ideal for hypothesis testing and unraveling of the complexities of life and illness, human genetics must rely on statistical inference from observed data.\\r\\n\\r\\nThese are the primary contrasts between the more pure scientific culture of research in lower organisms and the more anthropological detective work we are relegated to in human studies.\\r\\n\\r\\nThis necessity to play detective has motivated whole industries of sophisticated technological advances, spawning the young sciences of genomics and bioinformatics to help us perform our detective work, or to make the most out of the undersized, underpowered, and suboptimally designed natural experiments with which we are stuck.\\r\\n\\r\\nThus even in possession of these fine new tools, geneticists must still search the world for optimal data to apply them to.\\r\\n\\r\\nThe real challenge in the genomic era is to remember that fundamentally our questions are scientific, largely requiring selection of appropriate study designs, and not matters of technology per se.\\r\\n\\r\\nThe American Heritage Dictionary (2000) defines genetics as “The branch of biology that deals with heredity, especially the mechanisms of hereditary transmission and the variation of inherited characteristics among similar or related organisms,” and genomics as “The study of all of the nucleotide sequences, including structural genes, regulatory sequences, and noncoding DNA segments, in the chromosomes of an organism.”\\r\\n\\r\\nWhile the above definitions are not universal, they at least provide a starting point for considering why people who self-identify with each of the above disciplines approach genetic questions from a different perspective.\\r\\n\\r\\nOriginally, genetics was primarily a theoretical and statistical science, based on Mendel’s observations that heredity characters are correlated in families because discrete units of hereditary information (later termed “genes”) are inherited from one’s parents according to very simple principles which, in today’s terminology are that each individual has two copies of each gene which may vary, one received from each of that individual’s parents, and a random choice of which the individual will transmit to each of his offspring.\\r\\n\\r\\nBecause of parent-offspring transmission, units of information are shared among relatives, so that genetic variation that impacts on variation in phenotype, the phenotype will be correlated among relatives, in ways that can be specified by the probabilistic laws of inheritance. R.A. Fisher, Sewall Wright and other scientists developed the field of genetics as a quantitative statistical science, and described the consequences of Mendel’s laws, and deviations therefrom (such as linkage and linkage disequilibrium), and their potential effects on correlations in phenotypic variation within and between species (Fisher, 1939, 1949, and I960; Wright, 1968).\\r\\n\\r\\nMuch of this early literature goes untouched by modern geneticists, many of whom are either wholly unaware of this scientific heritage, or who do not realize its relevance.\\r\\n\\r\\nNot the least of the reason for this is the great difficulty in understanding this highly technical material.\\r\\n\\r\\nAn additional problem is that often without thinking deeply about it, molecular biologists assign “genetic” terminology to the “molecular processes” they discovered to explain the genetic phenomena.\\r\\n\\r\\nFor example, traits are equated with genes underlying them, even when the latter are strictly matter of hypotheses based on a poor understanding of theoretical biology and genetics.\\r\\n\\r\\nBut Mendel carefully chose his traits, whereas variation in most traits of interest in biomedicine is not highly correlated with a specific variant in a single gene.\\r\\n\\r\\nThe confusion probably is the result of the rapid growth of molecular biology in the second half of the 20th century out of classical genetics that was largely restricted to ‘Mendelian’ traits (Elston, 1968; Terwilliger and Goring, 2000).\\r\\n\\r\\nGenetics proper is the study of genes and their inheritance, and perhaps we need a separate term-phenogenetics-to refer to the study that currently is called ‘genetics’, that is, the study of how genetic variation influences phenotypic variation.\\r\\n\\r\\nUltimately this is the real question that many scientists using genomics and informatics are hoping to address.\\r\\n\\r\\nIn fact, the older sense of the word \\'gene\\' to refer to protein-coding sequence, is clearly being blurred by other kinds of ‘gene’(the terminology is not yet standard) that are used to transcribe RNA, to regulate coding-gene expression, as signals for chromosome packaging, and the like-all of which are important and of great interest in informatics and genomics.\\r\\n\\r\\nThus, “genomics” is focused on identifying the tasks performed by different DNA sequences, variation that affect how well a given task is performed (which is really what genetics is all about).\\r\\n\\r\\nFor most people in the genomics field, the focus is on technologies and algorithms for identifying sequence variation and technologies to measure it.\\r\\n\\r\\nThese differences in perspective between “genomic approaches” and “genetic approaches” show the substantial areas where multidisciplinary efforts of geneticists and genomics experts will be essential.\\r\\n\\r\\nHowever, this will somehow require getting past the training and specialization narrowness of most people in the field, and some willingness not to race to hastily to the end problem of identifying the causes of complex diseases, when the important middle conceptual and study-design steps are given short shrift (with predictably problematic results).\\r\\n\\r\\nThe same American Heritage Dictionary (2002) defines informatics as “The science that is concerned with the gathering, manipulation, classification, storage, and retrieval of recorded knowledge,” implying that bioinformatics by extension would refer to the science of gathering, manipulation, classification, storage, and retrieval of recorded biological information.\\r\\n\\r\\nStatistical genetics refers to the study of probabilistic quantitative relationships among inherited sequence variations, and the quantitative statistical relationships between such variation and phenotypic variation.\\r\\n\\r\\nThe major distinction between these fields, much as that between genomics and genetics is between description of structure and its evolution, versus the study of the functional effects of variation.\\r\\n\\r\\nBioinformatics is largely focused on sifting through masses of haphazardly collected data in an attempt to build models of what the information in DNA sequences describes.\\r\\n\\r\\nIn such approaches, genes, proteins, and other biological data are treated as discrete units of information, for example, in describing networks of genes that might work together to perform some task, much like the Krebs cycle and other biochemical pathways we all had to laboriously memorize in graduate school (Krebs and Kornberg, 1957).\\r\\n\\r\\nJust because we can write down the molecules participating in the Krebs cycle, however, does not mean that variation in the efficiency of the Krebs cycle must necessarily be related to variation in the DNA sequence of the genes that encode the various proteins used in the Krebs cycle.\\r\\n\\r\\nThe latter is a question of statistical genetics-designing experiments to test whether variation in those genes might relate to variation in phenotype, whereas the former would fall under the rubric of bioinformatics, assuming such information were assembled from existing literature and data of various types.\\r\\n\\r\\nEssentially, the emphasis in genetics and statistical genetics is on elucidating and quantifying the stochastic relationships between genotype and phenotype, while genomics and bioinformatics are more focused on elucidating more deterministic relationships or descriptions of phenomena involving DNA sequences, or generating hypotheses for geneticists or other biologists to consider testing, if such hypotheses make biological sense.\\r\\n\\r\\nContemporary genomics is focused on generating as much sequence data as possible from as many people as possible, without much regard for what specific scientific questions are to be asked.\\r\\n\\r\\nIf biotechnology makes it possible to sequence or genotype thousands of individuals at thousands of sites in the genome, then genomics researchers suggest that it should be done, and immediately, as the best way to search for sites in the DNA sequence with functional consequences.\\r\\n\\r\\nInformaticians try to find ways to mine these enormous sets of existing data to look for patterns of relationships that distinguish sets of individuals, perhaps on the basis of phenotype.\\r\\n\\r\\nBut typically the emphasis of these technology and engineering-related fields is on obtaining as much data as possible and identifying patterns using as much data as possible, without much regard to how the data are ascertained, or what sort of patterns might be predicted on the basis of what is known about quantitative genetics.\\r\\n\\r\\nThis is sometimes referred to as “hypothesis-free” or “hypothesis generating” research, in contrast to most (of the best) genetics research that is designed to test specific hypotheses about genetic causation.\\r\\n\\r\\nHypotheses can be developed because we have formal theory of inheritance, and the evolutionary processes responsible for genetic variation and its distribution, originally developed by Fisher, Wright, and others for the likely relationships between phenotypic and genotypic variation, especially conditional on different models of etiology and ascertainment.\\r\\n\\r\\nWe have less specific theory for the structure of genomes, so that much of genomics and informatics is currently much more empirical and ad hoc.\\r\\n\\r\\nGenetic theory cannot tell us a priori which (if any) genetic variation is associated with any specific phenotypic variation, but specifically testable hypotheses can be framed to search for that variation because the theory of inheritance is generic; it specifies what sorts of correlation are likely to be identified for a genetically mediated trait, based on analysis of the trait correlations in families, and the sorts of populations from which the data are ascertained.\\r\\n\\r\\nRandomly searching for patterns in data without regard for predicted correlations due to genetic phenomena, and the constraints imposed thereby is easy to do because of the powerful genomics and informatics methods now available.\\r\\n\\r\\nHowever, in the end it proves to be inefficient at best, and there is ample history to show that this approach is plagued by high rates of false discovery, and failure to identify real structure in the datasets.\\r\\n\\r\\nFor this reason it is important for the genomics and bioinformatics researchers to gain a thorough knowledge of quantitative genetics and its methods, in order to know where and how their kinds of data and approaches will be most relevant to the practical genetic questions.\\r\\n\\r\\nThe contrast between genetics and genomics/ bioinformatics are essentially the same as that separating engineering and basic science.\\r\\n\\r\\nEngineers are extremely talented and intelligent people interested in finding ideal ways to accomplish certain tasks, either by development of new technological solutions, or by applying existing technology to accomplish some task or solve some problem.\\r\\n\\r\\nBasic science, on the other hand is aimed at answering a question, whereas too often in human genetics what is done is to assume the answer on the basis of poorly understood theory and use highly technical methods to find the specifics of the desired answer.\\r\\n\\r\\nThis is very common in human genetics, but is an illegitimate mix of basic science and engineering worldviews.\\r\\n\\r\\nThere is a way to think of the problem more constructively, and that is for geneticists to ignore present technical limits, assuming the biotechnology and informatics communities will solve them, and to be more critical in considering the questions they expect those tools to assist in answering.\\r\\n\\r\\nI have written many times (eg, Terwilliger and Goring, 2000) that geneticists should assume they have the full sequence data from any individual they would like, and the technical capability to perform any quantitative analysis they can formally describe.\\r\\n\\r\\nI firmly believe that technological solutions will be forthcoming in both areas, and that leaves only the scientific question of where to apply them and how, which needs much greater attention, and is fundamentally much more conceptually difficult.\\r\\n\\r\\nDespite tremendous advances in biotechnology and informatics, we are not close to solving the problem of how to correlate genetic variation with phenotypic variation in other than simple Mendelian situations, and these clearly do not present the most pressing health problems of our day.\\r\\n\\r\\nUltimately, to unravel the etiology of human complex disease is an extremely difficult yet important task requiring the input of people with enormously heterogeneous background and expertise.\\r\\n\\r\\nClearly epidemiologists are expert in identifying how variation in environmental exposures relate to phenotypic variation, genetic epidemiologists and statistical geneticists are expert in identifying the relationships between heritable exposures, and phenotypic variation.\\r\\n\\r\\nPopulation geneticists and evolutionary biologists are experts in identifying and quantifying the relationships among genes on a population level, and the relationships between phenotypes and genotypes on an evolutionary level.\\r\\n\\r\\nAnthropologists, historians, genealogists and demographers are essential to analyzing family structures, identifying connections among affected individuals in historical time, and locating populations with interesting population histories that may be more useful in genetic studies.\\r\\n\\r\\nSocial scientists, nutritionists, and environmental health researchers are essential to quantifying and measuring the environmental risk factors hypothesized to be related to the traits of interest.\\r\\n\\r\\nBioinformaticians, medical experts, physiologists, biochemists and the like are essential to helping develop hypotheses worth testing, both from clinical and biological perspective, as well as from sifting through extant data for latent structure which may potentially be of biological relevance.\\r\\n\\r\\nNumerous clinical and laboratory experts are essential to making sure the phenotypes are measured in the most accurate way possible, to make weak correlations with genotypes as identifiable as possible.\\r\\n\\r\\nGenomics experts and biotechnologists are obviously critical to generating the sequence and genotype data one would hope to correlate with phenotypic variation.\\r\\n\\r\\nAnd in the end, all of these roles need to be treated with equivalent importance in designing and carrying out a study, since no expert in any one of these subareas can possibly be sufficiently expert in the others to design a study without collaboration and cooperation.\\r\\n\\r\\nThis is what makes genetic research particularly appealing, but also makes it exceptionally complex to start and to organize. Mere collection of extant data and genotyping them will not lead to a powerful study, but rather one needs to combine expertise from different areas to design an appropriate experiment to apply the genomics and informatics technology to, and this can take many years of planning and fieldwork before the actual genotype-phenotype correlations can even be explored.\\r\\n\\r\\nThe arguments presented here may seem strange given the common rhetoric from the leaders of the human genome project.\\r\\n\\r\\nBut a critical look at what has actually been achieved shows that it is unlikely that major progress in public health or even in understanding phenogenetic relationships will suddenly come upon us out of scaled-up, hypothesis-free technology without appropriately focused genetic questions and applying great technology to suboptimal scientific experiments.\\r\\n\\r\\nMore thorough integrative collaboration goes against many of the trends toward academic micro-specialization, but is needed and will provide both the challenge as well as the excitement of this area of research in the future, if we take our recent experiences with current approaches to heart.\\r\\n\\r\\nIt would be wrong to minimize the communication problem in any multidisciplinary field of endeavor.\\r\\n\\r\\nSuch problems are made even more difficult when the literature in genetics is mostly available only in English, which is a second language at best to most researchers outside the US and UK, making reliance on review papers and media accounts a more important source of information for such scientists than it might otherwise be.\\r\\n\\r\\nAs someone who tries to read articles and books from the anthropological literature written in Korean, I can attest to how complicated in can be to read material in a different language, especially when it is not in your own major field of expertise.\\r\\n\\r\\nAnd problems also come about from reading material that has been translated and filtered through someone else’s perceptions of meaning into your own language as well.\\r\\n\\r\\nAs an example of the latter, I have been misquoted in the Korean media (Kyunghyung Sinmun, 2003; Joongang llbo, 2004) as having claimed that the Korean population was a \"genetically pure” or “homogeneous” population (whatever that actually means...)\\r\\n\\r\\nIn fact, I never said or thought anything remotely like this.\\r\\n\\r\\nOf course there are about 80 million Koreans in the world, which is an absolutely enormous population size, and it is clear that there is necessarily an enormous amount of genetic variation in such a large, ancient, and historically substructured population.\\r\\n\\r\\nThere are many ways one can be misled by relying on secondary sources of information and numerous reasons they can misrepresent the true situation.\\r\\n\\r\\nCommunication and collaboration barriers show down work, and greatly reduce the number and variety of scientists whose creative imagination, experience, and insight could be brought to bear worldwide on these problems.\\r\\n\\r\\nOf course, there are economic and political reasons why things are the way they are, but there is no legitimate scientific rationale for rushing as we have been doing.\\r\\n\\r\\nThere will be a lot of work to do in this area for decades to come, and a sincere desire actually to solve the problems should lead to a comparable willingness to be inclusive in the ways I have suggested.'"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "myFirstCorpus.raw(['gni-15-4-162.txt',\n",
    " 'gni-17-3-29.txt',\n",
    " 'gni-2-1-1.txt',]) ##메모리 에러나면 노트북 켰다 켜보세요~"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "##학습활동 해보세요~ readme 파일을 참고하여 NLTKcorpus에 뭐 어쩌고 있는지!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "stopwords=nltk.corpus.stopwords.words('english')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "reuter=nltk.corpus.reuters.words()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [],
   "source": [
    "filteredReuter=[w for w in reuter if w.lower() not in stopwords]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1720901, 1265276)"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(reuter), len(filteredReuter)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [],
   "source": [
    "names=nltk.corpus.names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['female.txt', 'male.txt']"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "names.fileids()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2943"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "male_names=names.words('male.txt')\n",
    "len(male_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5001"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "female_names=names.words('female.txt')\n",
    "len(female_names)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Abbey',\n",
       " 'Abbie',\n",
       " 'Abby',\n",
       " 'Addie',\n",
       " 'Adrian',\n",
       " 'Adrien',\n",
       " 'Ajay',\n",
       " 'Alex',\n",
       " 'Alexis',\n",
       " 'Alfie',\n",
       " 'Ali',\n",
       " 'Alix',\n",
       " 'Allie',\n",
       " 'Allyn',\n",
       " 'Andie',\n",
       " 'Andrea',\n",
       " 'Andy',\n",
       " 'Angel',\n",
       " 'Angie',\n",
       " 'Ariel',\n",
       " 'Ashley',\n",
       " 'Aubrey',\n",
       " 'Augustine',\n",
       " 'Austin',\n",
       " 'Averil',\n",
       " 'Barrie',\n",
       " 'Barry',\n",
       " 'Beau',\n",
       " 'Bennie',\n",
       " 'Benny',\n",
       " 'Bernie',\n",
       " 'Bert',\n",
       " 'Bertie',\n",
       " 'Bill',\n",
       " 'Billie',\n",
       " 'Billy',\n",
       " 'Blair',\n",
       " 'Blake',\n",
       " 'Bo',\n",
       " 'Bobbie',\n",
       " 'Bobby',\n",
       " 'Brandy',\n",
       " 'Brett',\n",
       " 'Britt',\n",
       " 'Brook',\n",
       " 'Brooke',\n",
       " 'Brooks',\n",
       " 'Bryn',\n",
       " 'Cal',\n",
       " 'Cam',\n",
       " 'Cammy',\n",
       " 'Carey',\n",
       " 'Carlie',\n",
       " 'Carlin',\n",
       " 'Carmine',\n",
       " 'Carroll',\n",
       " 'Cary',\n",
       " 'Caryl',\n",
       " 'Casey',\n",
       " 'Cass',\n",
       " 'Cat',\n",
       " 'Cecil',\n",
       " 'Chad',\n",
       " 'Chris',\n",
       " 'Chrissy',\n",
       " 'Christian',\n",
       " 'Christie',\n",
       " 'Christy',\n",
       " 'Clair',\n",
       " 'Claire',\n",
       " 'Clare',\n",
       " 'Claude',\n",
       " 'Clem',\n",
       " 'Clemmie',\n",
       " 'Cody',\n",
       " 'Connie',\n",
       " 'Constantine',\n",
       " 'Corey',\n",
       " 'Corrie',\n",
       " 'Cory',\n",
       " 'Courtney',\n",
       " 'Cris',\n",
       " 'Daffy',\n",
       " 'Dale',\n",
       " 'Dallas',\n",
       " 'Dana',\n",
       " 'Dani',\n",
       " 'Daniel',\n",
       " 'Dannie',\n",
       " 'Danny',\n",
       " 'Darby',\n",
       " 'Darcy',\n",
       " 'Darryl',\n",
       " 'Daryl',\n",
       " 'Deane',\n",
       " 'Del',\n",
       " 'Dell',\n",
       " 'Demetris',\n",
       " 'Dennie',\n",
       " 'Denny',\n",
       " 'Devin',\n",
       " 'Devon',\n",
       " 'Dion',\n",
       " 'Dionis',\n",
       " 'Dominique',\n",
       " 'Donnie',\n",
       " 'Donny',\n",
       " 'Dorian',\n",
       " 'Dory',\n",
       " 'Drew',\n",
       " 'Eddie',\n",
       " 'Eddy',\n",
       " 'Edie',\n",
       " 'Elisha',\n",
       " 'Emmy',\n",
       " 'Erin',\n",
       " 'Esme',\n",
       " 'Evelyn',\n",
       " 'Felice',\n",
       " 'Fran',\n",
       " 'Francis',\n",
       " 'Frank',\n",
       " 'Frankie',\n",
       " 'Franky',\n",
       " 'Fred',\n",
       " 'Freddie',\n",
       " 'Freddy',\n",
       " 'Gabriel',\n",
       " 'Gabriell',\n",
       " 'Gail',\n",
       " 'Gale',\n",
       " 'Gay',\n",
       " 'Gayle',\n",
       " 'Gene',\n",
       " 'George',\n",
       " 'Georgia',\n",
       " 'Georgie',\n",
       " 'Geri',\n",
       " 'Germaine',\n",
       " 'Gerri',\n",
       " 'Gerry',\n",
       " 'Gill',\n",
       " 'Ginger',\n",
       " 'Glen',\n",
       " 'Glenn',\n",
       " 'Grace',\n",
       " 'Gretchen',\n",
       " 'Gus',\n",
       " 'Haleigh',\n",
       " 'Haley',\n",
       " 'Hannibal',\n",
       " 'Harley',\n",
       " 'Hazel',\n",
       " 'Heath',\n",
       " 'Henrie',\n",
       " 'Hilary',\n",
       " 'Hillary',\n",
       " 'Holly',\n",
       " 'Ike',\n",
       " 'Ikey',\n",
       " 'Ira',\n",
       " 'Isa',\n",
       " 'Isador',\n",
       " 'Isadore',\n",
       " 'Jackie',\n",
       " 'Jaime',\n",
       " 'Jamie',\n",
       " 'Jan',\n",
       " 'Jean',\n",
       " 'Jere',\n",
       " 'Jermaine',\n",
       " 'Jerrie',\n",
       " 'Jerry',\n",
       " 'Jess',\n",
       " 'Jesse',\n",
       " 'Jessie',\n",
       " 'Jo',\n",
       " 'Jodi',\n",
       " 'Jodie',\n",
       " 'Jody',\n",
       " 'Joey',\n",
       " 'Jordan',\n",
       " 'Juanita',\n",
       " 'Jude',\n",
       " 'Judith',\n",
       " 'Judy',\n",
       " 'Julie',\n",
       " 'Justin',\n",
       " 'Karel',\n",
       " 'Kellen',\n",
       " 'Kelley',\n",
       " 'Kelly',\n",
       " 'Kelsey',\n",
       " 'Kerry',\n",
       " 'Kim',\n",
       " 'Kip',\n",
       " 'Kirby',\n",
       " 'Kit',\n",
       " 'Kris',\n",
       " 'Kyle',\n",
       " 'Lane',\n",
       " 'Lanny',\n",
       " 'Lauren',\n",
       " 'Laurie',\n",
       " 'Lee',\n",
       " 'Leigh',\n",
       " 'Leland',\n",
       " 'Lesley',\n",
       " 'Leslie',\n",
       " 'Lin',\n",
       " 'Lind',\n",
       " 'Lindsay',\n",
       " 'Lindsey',\n",
       " 'Lindy',\n",
       " 'Lonnie',\n",
       " 'Loren',\n",
       " 'Lorne',\n",
       " 'Lorrie',\n",
       " 'Lou',\n",
       " 'Luce',\n",
       " 'Lyn',\n",
       " 'Lynn',\n",
       " 'Maddie',\n",
       " 'Maddy',\n",
       " 'Marietta',\n",
       " 'Marion',\n",
       " 'Marlo',\n",
       " 'Martie',\n",
       " 'Marty',\n",
       " 'Mattie',\n",
       " 'Matty',\n",
       " 'Maurise',\n",
       " 'Max',\n",
       " 'Maxie',\n",
       " 'Mead',\n",
       " 'Meade',\n",
       " 'Mel',\n",
       " 'Meredith',\n",
       " 'Merle',\n",
       " 'Merrill',\n",
       " 'Merry',\n",
       " 'Meryl',\n",
       " 'Michal',\n",
       " 'Michel',\n",
       " 'Michele',\n",
       " 'Mickie',\n",
       " 'Micky',\n",
       " 'Millicent',\n",
       " 'Morgan',\n",
       " 'Morlee',\n",
       " 'Muffin',\n",
       " 'Nat',\n",
       " 'Nichole',\n",
       " 'Nickie',\n",
       " 'Nicky',\n",
       " 'Niki',\n",
       " 'Nikki',\n",
       " 'Noel',\n",
       " 'Ollie',\n",
       " 'Page',\n",
       " 'Paige',\n",
       " 'Pat',\n",
       " 'Patrice',\n",
       " 'Patsy',\n",
       " 'Pattie',\n",
       " 'Patty',\n",
       " 'Pen',\n",
       " 'Pennie',\n",
       " 'Penny',\n",
       " 'Perry',\n",
       " 'Phil',\n",
       " 'Pooh',\n",
       " 'Quentin',\n",
       " 'Quinn',\n",
       " 'Randi',\n",
       " 'Randie',\n",
       " 'Randy',\n",
       " 'Ray',\n",
       " 'Regan',\n",
       " 'Reggie',\n",
       " 'Rene',\n",
       " 'Rey',\n",
       " 'Ricki',\n",
       " 'Rickie',\n",
       " 'Ricky',\n",
       " 'Rikki',\n",
       " 'Robbie',\n",
       " 'Robin',\n",
       " 'Ronnie',\n",
       " 'Ronny',\n",
       " 'Rory',\n",
       " 'Ruby',\n",
       " 'Sal',\n",
       " 'Sam',\n",
       " 'Sammy',\n",
       " 'Sandy',\n",
       " 'Sascha',\n",
       " 'Sasha',\n",
       " 'Saundra',\n",
       " 'Sayre',\n",
       " 'Scotty',\n",
       " 'Sean',\n",
       " 'Shaine',\n",
       " 'Shane',\n",
       " 'Shannon',\n",
       " 'Shaun',\n",
       " 'Shawn',\n",
       " 'Shay',\n",
       " 'Shayne',\n",
       " 'Shea',\n",
       " 'Shelby',\n",
       " 'Shell',\n",
       " 'Shelley',\n",
       " 'Sibyl',\n",
       " 'Simone',\n",
       " 'Sonnie',\n",
       " 'Sonny',\n",
       " 'Stacy',\n",
       " 'Sunny',\n",
       " 'Sydney',\n",
       " 'Tabbie',\n",
       " 'Tabby',\n",
       " 'Tallie',\n",
       " 'Tally',\n",
       " 'Tammie',\n",
       " 'Tammy',\n",
       " 'Tate',\n",
       " 'Ted',\n",
       " 'Teddie',\n",
       " 'Teddy',\n",
       " 'Terri',\n",
       " 'Terry',\n",
       " 'Theo',\n",
       " 'Tim',\n",
       " 'Timmie',\n",
       " 'Timmy',\n",
       " 'Tobe',\n",
       " 'Tobie',\n",
       " 'Toby',\n",
       " 'Tommie',\n",
       " 'Tommy',\n",
       " 'Tony',\n",
       " 'Torey',\n",
       " 'Trace',\n",
       " 'Tracey',\n",
       " 'Tracie',\n",
       " 'Tracy',\n",
       " 'Val',\n",
       " 'Vale',\n",
       " 'Valentine',\n",
       " 'Van',\n",
       " 'Vin',\n",
       " 'Vinnie',\n",
       " 'Vinny',\n",
       " 'Virgie',\n",
       " 'Wallie',\n",
       " 'Wallis',\n",
       " 'Wally',\n",
       " 'Whitney',\n",
       " 'Willi',\n",
       " 'Willie',\n",
       " 'Willy',\n",
       " 'Winnie',\n",
       " 'Winny',\n",
       " 'Wynn']"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[w for w in male_names if w in female_names]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "same_name=[w for w in male_names if w in female_names]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "365"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(same_name)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [],
   "source": [
    "import nltk\n",
    "from nltk.corpus import brown\n",
    "\n",
    "cfd=nltk.ConditionalFreqDist( ##cdf가 의미하는게 뭔가용,,!\n",
    "    (fileid,name[-1])\n",
    "    for fileid in names.fileids()\n",
    "    for name in names.words(fileid)\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<ConditionalFreqDist with 2 conditions>"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cfd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "FreqDist({'n': 478, 'e': 468, 'y': 332, 's': 230, 'd': 228, 'r': 190, 'l': 187, 'o': 165, 't': 164, 'h': 93, ...})"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cfd['male.txt'] #왜???"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "FreqDist({'a': 1773, 'e': 1432, 'y': 461, 'n': 386, 'i': 317, 'l': 179, 'h': 105, 's': 93, 't': 68, 'r': 47, ...})"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cfd['female.txt']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x2b2ceeec940>"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cfd.plot()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
